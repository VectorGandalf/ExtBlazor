@using ExtBlazor.Core
<h2>Wrapped Grid demo</h2>
<p>
    The recomended way to use Grid component is to wrap it with the project specifics for easy use.
</p>
<div class="input-group w-50">
    <input @bind=query.Search class="form-control" @bind:event="oninput" @onkeydown=Enter>
    <button class="btn btn-primary" @onclick=Search>Search</button>
</div>
<WrappedGrid Query="query" @ref=grid>
    <Column Property="u => u.Id" />
    <Column Property="u => u.Name" />
    <Column Property="u => u.Username" />
    <Column Property="u => u.ContactInformation.Email" Title="E-mail" Context="item">
        <a href="mailto:@item.ContactInformation.Email">@item.ContactInformation.Email</a>
    </Column>
    <Column Property="u => u.ContactInformation.Phone" Format=FormatPhoneNumber />
    <Column Property="u => u.Created" Format=FormatDate DefaultSortColumn="true" DefaultSortDirectionAsc="false" />
    <Column Property="u => u.LastLogin" Title="Last login" Format=FormatDateTime />
    <TemplateColumn Title="E-mail length" Context="item" Sortable="false">
        @item.ContactInformation.Email.Length
    </TemplateColumn>
</WrappedGrid>
@code {
    private GetUserDtosQuery query = new();

    private WrappedGrid<UserDto>? grid;

    private async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
            await Search();
    }

    private async Task Search()
    {
        if (grid != null)
            await grid.Update();
    }

    private string? FormatPhoneNumber(string phoneNumber) => phoneNumber.Insert(3, " (0) ").Insert(11, "-").Insert(14, " ").Insert(17, " ");
    private string? FormatDate(DateTime date) => date.ToString("yyyy-MM-dd");
    private string? FormatDateTime(DateTime? dateTime) => dateTime?.ToString("yyyy-MM-dd HH:mm");
}
